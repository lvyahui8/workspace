#include <iostream>

using std::cout;
using std::cin;
using std::endl;
//类之间很可能会相互引用，这种情况称为循环依赖。由于在使用一个类之前，必须定义该类，所以不论把哪个写在前面
//都会引起编译错误，解决这类问题的方法，就是使用前向引用声明，如下

class B;			//前向引用声明
/*
使用前向引用声明之后，只能使用被声明的符号，而不能涉及类的任何细节

 使用前向引用声明，可以解决一些问题。但不万能。尽管使用了前向引用声明，在定义一个完整的类之前
不能定义该类的对象，也不能在内联成员函数中使用该类的对象。但是，可以定义一个类的对象引用或指针
*/
class A				//A的类定义
{
public:
	void f(B b);	//以B类对象b为形参的成员函数
					//这里将 引起错误，因为‘B’为未知符号
};

class B				//B的类定义
{
public:
	void g(A a);	//以A类对象a为形参的成员函数	
};

void main()
{

}